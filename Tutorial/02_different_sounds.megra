;; Megra offers several pre-defined sound events (how to define your own sound events will be a later topic ... )

(in-package :megra)

;; Synth Sounds
;; MÃ©gra comes with several pre-defined synth sound events

;; this one, we already know:
(sink 'sound-demo-sink ()
      (graph 'demo-sounds ()
	     (node 1 (sine 'a4 :lvl 0.5 :dur 500))
	     (edge 1 1 :dur 1000 :prob 100)))

;; Just sine waves would be a little boring, no ?
(sink 'sound-demo-sink ()
      (graph 'demo-sounds ()
	     (node 1 (sqr 'a4 :lvl 0.5 :dur 500 :lp-freq 1600));; <--- Square Wave ...
	     (edge 1 1 :dur 1000 :prob 100)))
;; note (and play around) with the ':lp-freq' parameter above !! 

;; Sawtooth waves ! 
(sink 'sound-demo-sink ()
      (graph 'demo-sounds ()
	     (node 1 (saw 'a3 :lvl 0.5 :dur 500 :lp-freq 1600))
	     (edge 1 1 :dur 1000 :prob 100)))

;; ... and Triangle Waves !! 
(sink 'sound-demo-sink ()
      (graph 'demo-sounds ()
	     (node 1 (tri 'a2 :lvl 0.5 :dur 500 :lp-freq 1600))
	     (edge 1 1 :dur 1000 :prob 100)))

;; all of the above support more or less the same
;; set of parameter, that, if you've configured your
;; editor well, you should see on the line at the bottom ...
;; just play around with them a bit
;; AND BE CAREFUL ! Not all of the sounds might be nice to the ears ! 
(sink 'sound-demo-sink ()
      (graph 'demo-sounds ()
	     (node 1 (tri 'a2 :lvl 0.9 :atk 400 :rel 30 :dur 2000 :lp-freq 1600))
	     (edge 1 1 :dur 1000 :prob 100)))

;; Triangular bassline !
(sink 'sound-demo-sink () ;; <-- don't forget these parenthesis ! 
      (graph 'demo-sounds ()
	     (node 1 (tri 'c2 :lvl 0.9 :atk 2 :rel 30 :dur 200 :lp-freq 400))
	     (node 2 (tri 'g2 :lvl 0.9 :atk 2 :rel 30 :dur 200 :lp-freq 400))
	     (edge 1 2 :dur 410 :prob 100)
	     (edge 2 1 :dur 410 :prob 100)))

;; Sample Sounds

; the generic sample sound event in megra is called "grain"-event, as obviously it can be
;; used for granular as well as regular sampling ...

;; (for a shorter version, check chapter 03!)


;; once you've defined a folder for your samples, the naming follows a convention
;; borrowed from tidal, where the first string denotes the folder, and the second
;; one the filename (without the .wav or .flac extension ...)
(sink 'drumming-sink ()
      (graph 'demo-drums ()
	     (node 1 (grain "tutorial" "jazzy_bd" :lvl 0.9 :lp-dist 0.9 :dur 100))
	     (node 2 (grain "tutorial" "jazzy_sn" :lvl 0.9 :lp-dist 0.9 :dur 100))
	     (edge 1 2 :dur 410 :prob 100)
	     (edge 2 1 :dur 410 :prob 100)))

(sink 'drumming-sink ()
      (graph 'demo-drums ()
	     (node 1 (grain "tutorial" "jazzy_bd" :lvl 0.9 :lp-dist 0.9 :dur 100))
	     (node 2 (grain "tutorial" "jazzy_sn" :lvl 0.9 :lp-dist 0.9 :dur 100))
	     (edge 1 2 :dur 410 :prob 100)
	     (edge 2 1 :dur 410 :prob 100)))

(sink 'guitar-sink ()
      (graph 'demo-git ()
	     (node 1 (grain "tutorial" "git"
			    :lvl 0.9
			    :lp-dist 0.9
			    :dur 120
			    :start 0.1 ;; <- start position, relative to the file length
			    :rate -0.5)) ;; <- playback rate ..
	     (edge 1 1 :dur 410 :prob 100)))

;; This was a very basic introduction into the sonic world of megra, but
;; stay tuned, there's more to come ! 

(clear)
